# -*- coding: utf-8 -*-
"""DataProcessingForEmpericalSoftwareEngineering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eZQWdkmYzykSaTl7_rXENNYhMHGaG1yf
"""

import io
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats
from google.colab import files

uploaded = files.upload()

repo = pd.read_csv(io.BytesIO(uploaded['CleanedEnterpriseGitRepositoryData.csv']))

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score


target = repo["Left"]
target = pd.get_dummies(target)

trainingset = repo.drop(columns=["Left","Developer"])

trainingset = trainingset.apply(pd.to_numeric, errors='coerce')

Xtrain, Xtest, ytrain, ytest = train_test_split(trainingset,target)

Xtest = Xtest.apply(pd.to_numeric, errors='coerce')
ytest = ytest.apply(pd.to_numeric, errors='coerce')

Xtrain = Xtrain.apply(pd.to_numeric, errors='coerce')
ytrain = ytrain.apply(pd.to_numeric, errors='coerce')

regmodel = LinearRegression().fit(Xtrain, ytrain);
predictions = regmodel.predict(Xtest)
print("Testing RSME:"+str(mean_squared_error(ytest,predictions,squared=False)));
print("Testing R^2: "+ str(r2_score(ytest,predictions)));
predictions = regmodel.predict(Xtrain);
print("Training RSME:" + str(mean_squared_error(ytrain,predictions,squared=False)));
print("Training R^2: "+ str(r2_score(ytrain,predictions)));



from sklearn.tree import DecisionTreeClassifier
class_tree = DecisionTreeClassifier()
class_tree.fit(Xtrain, ytrain)
print(class_tree.score(Xtrain, ytrain))
print(class_tree.score(Xtest, ytest))
print(class_tree.get_depth())
print(class_tree.feature_importances_)